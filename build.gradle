buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'

minecraft {
    version = "1.12.1-14.22.1.2478"
    runDir = "run"
	mappings = "snapshot_20170624"
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
	
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
	compileJava {
			sourceCompatibility = '1.8'
			targetCompatibility = '1.8'
	}
}

subprojects {
	apply plugin: 'net.minecraftforge.gradle.forge'
}

dependencies {
   compile project(':API')
   compile project(':Animator')
   compile project(':Mod')
}

task eclipse(overwrite: true) {
	outputs.file "$projectDir/eclipse"

	def zipFile = file('tmp.zip')
	def url = new URL('https://github.com/ObsidianSuite/ObsidianSuite/releases/download/v1.0/ObsidianSuiteEclipseFolder.zip')
	
	doFirst {
		if (!zipFile.exists()) {
			url.withInputStream{ i -> zipFile.withOutputStream{ it << i }}
		}
		
		copy {
			from zipTree(zipFile) into projectDir
		}
		
		mkdir "Animator/run"
		mkdir "Mod/run"
	}
	
	doLast {
		delete zipFile
	}
}

def animatorProjects = [project(':API'),project(':Animator')]
animatorProjects.each { subproject -> evaluationDependsOn(subproject.path)}
task buildAnimatorWithAPI( type: Jar, dependsOn: animatorProjects.tasks["build"] ) {
    baseName = 'ObsidianAnimator_v0.4.0-Alpha'
    animatorProjects.each { subproject -> from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}
